{"version":3,"file":"static/js/635.d4a63060.chunk.js","mappings":"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,GAChBob,EAASpb,EACF+f,GAGLzO,GAActR,IAChB2R,EAAQO,QAAQlS,GACT8f,IAGT1E,EAAS,KACF4E,EAA+BhgB,GACxC,CAGA,SAAS+f,EAA6B/f,GACpC,OAAa,OAATA,GAAiBqR,GAAmBrR,GAC/BsV,EAAItV,GAGTA,IAASob,GACXzJ,EAAQO,QAAQlS,GACTigB,IAGTtO,EAAQO,QAAQlS,GACT+f,EACT,CAGA,SAASC,EAA+BhgB,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAoR,GAA0BpR,GAEnB6f,EAA2B7f,IAGpC2R,EAAQO,QAAQlS,GACTggB,EACT,CAGA,SAASC,EAAkCjgB,GACzC,OAAa,KAATA,GAAwB,KAATA,GAAesR,GAActR,GACvCyf,EAA4Bzf,GAG9BsV,EAAItV,EACb,CAGA,SAAS2f,EAAY3f,GACnB,OAAa,KAATA,GACF2R,EAAQO,QAAQlS,GACTkgB,GAGF5K,EAAItV,EACb,CAGA,SAASkgB,EAAclgB,GACrB,OAAIsR,GAActR,IAChB2R,EAAQO,QAAQlS,GACTkgB,GAGO,OAATlgB,GAAiBqR,GAAmBrR,GACvCqT,EAAarT,GACbsV,EAAItV,EACV,CAGA,SAASqT,EAAarT,GACpB,OAAa,KAATA,GAAwB,IAATub,GACjB5J,EAAQO,QAAQlS,GACTmgB,GAGI,KAATngB,GAAwB,IAATub,GACjB5J,EAAQO,QAAQlS,GACTogB,GAGI,KAATpgB,GAAwB,IAATub,GACjB5J,EAAQO,QAAQlS,GACTqgB,GAGI,KAATrgB,GAAwB,IAATub,GACjB5J,EAAQO,QAAQlS,GACTof,GAGI,KAATpf,GAAwB,IAATub,GACjB5J,EAAQO,QAAQlS,GACTsgB,IAGLjP,GAAmBrR,IAAmB,IAATub,GAAuB,IAATA,EAQlC,OAATvb,GAAiBqR,GAAmBrR,GAC/BugB,EAAyBvgB,IAGlC2R,EAAQO,QAAQlS,GACTqT,GAZE1B,EAAQyC,MACboM,GACAH,EACAE,EAHK5O,CAIL3R,EASN,CAGA,SAASugB,E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9T,GAAmBrR,IACrBoa,EAAc8K,EACPP,EAAa3kB,IAGlBsR,GAActR,IAChB2R,EAAQO,QAAQlS,GACTklB,GAGFxnB,EAAIsC,EACb,CAGA,SAASmlB,EAAqBnlB,GAC5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAgR,GAAkBhR,IAElB2R,EAAQO,QAAQlS,GACTmlB,GAGFC,EAA0BplB,EACnC,CAGA,SAASolB,EAA0BplB,GACjC,OAAa,KAATA,GACF2R,EAAQO,QAAQlS,GACTqlB,GAGLhU,GAAmBrR,IACrBoa,EAAcgL,EACPT,EAAa3kB,IAGlBsR,GAActR,IAChB2R,EAAQO,QAAQlS,GACTolB,GAGFF,EAAellB,EACxB,CAGA,SAASqlB,EAA4BrlB,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOsV,EAAItV,GAGA,KAATA,GAAwB,KAATA,GACjB2R,EAAQO,QAAQlS,GAChBob,EAASpb,EACFslB,GAGLjU,GAAmBrR,IACrBoa,EAAciL,EACPV,EAAa3kB,IAGlBsR,GAActR,IAChB2R,EAAQO,QAAQlS,GACTqlB,IAGT1T,EAAQO,QAAQlS,GAChBob,OAASxV,EACF2f,EACT,CAGA,SAASD,EAA4BtlB,GACnC,OAAIA,IAASob,GACXzJ,EAAQO,QAAQlS,GACTwlB,GAGI,OAATxlB,EACKsV,EAAItV,GAGTqR,GAAmBrR,IACrBoa,EAAckL,EACPX,EAAa3kB,KAGtB2R,EAAQO,QAAQlS,GACTslB,EACT,CAGA,SAASE,EAAiCxlB,GACxC,OAAa,KAATA,GAAwB,KAATA,GAAeoR,GAA0BpR,GACnDklB,EAAellB,GAGjBsV,EAAItV,EACb,CAGA,SAASulB,EAA8BvlB,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOsV,EAAItV,GAGA,KAATA,GAAeoR,GAA0BpR,GACpCklB,EAAellB,IAGxB2R,EAAQO,QAAQlS,GACTulB,EACT,CAKA,SAASZ,EAAa3kB,GAKpB,OA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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x(\"react.element\");c=x(\"react.portal\");d=x(\"react.fragment\");e=x(\"react.strict_mode\");f=x(\"react.profiler\");g=x(\"react.provider\");h=x(\"react.context\");k=x(\"react.forward_ref\");l=x(\"react.suspense\");m=x(\"react.suspense_list\");n=x(\"react.memo\");p=x(\"react.lazy\");q=x(\"react.block\");r=x(\"react.server.block\");u=x(\"react.fundamental\");v=x(\"react.debug_trace_mode\");w=x(\"react.legacy_hidden\")}\nfunction y(a){if(\"object\"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;exports.ContextConsumer=h;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;\nexports.Suspense=I;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return y(a)===h};exports.isContextProvider=function(a){return y(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return y(a)===k};exports.isFragment=function(a){return y(a)===d};exports.isLazy=function(a){return y(a)===p};exports.isMemo=function(a){return y(a)===n};\nexports.isPortal=function(a){return y(a)===c};exports.isProfiler=function(a){return y(a)===f};exports.isStrictMode=function(a){return y(a)===e};exports.isSuspense=function(a){return y(a)===l};exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||\"object\"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\nexports.typeOf=y;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array.<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array.<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array.<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array.<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const footnoteOrder = h.footnoteOrder\n  const identifier = String(node.identifier)\n  const index = footnoteOrder.indexOf(identifier)\n  const marker = String(\n    index === -1 ? footnoteOrder.push(identifier) : index + 1\n  )\n\n  return h(\n    node,\n    'a',\n    {\n      href: '#fn' + marker,\n      className: ['footnote-ref'],\n      id: 'fnref' + marker,\n      role: 'doc-noteref'\n    },\n    [h(node.position, 'sup', [u('text', marker)])]\n  )\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array.<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array.<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array.<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    let pos = node.align ? align.length : row.length\n    /** @type {Array.<Content>} */\n    const out = []\n\n    while (pos--) {\n      const cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array.<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Object.<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array.<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Object.<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array.<string>} footnoteOrder Order in which footnotes occur\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array.<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false] Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {Handlers} [handlers] Object mapping mdast nodes to functions handling them\n * @property {Array.<string>} [passThrough] List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler] Handler for all unknown nodes.\n *\n * @typedef {Record.<string, Handler>} Handlers Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Object.<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array.<string>} */\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [plugins=[]] **deprecated**: use `remarkPlugins` instead\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    // TODO: deprecate `plugins` in v8.0.0.\n    .use(options.remarkPlugins || options.plugins || [])\n    .use(remarkRehype, {allowDangerousHtml: true})\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","toUpperCase","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","b","d","e","f","g","h","k","n","p","q","r","u","v","w","Symbol","for","x","y","a","t","$$typeof","z","A","B","C","D","E","F","G","H","I","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","parse","require","iterator","output","hasIterator","len","_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","bind","apply","instance","Function","setPrototypeOf","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","getPrototypeOf","create","stringifyPosition","point","index","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","actual","expected","file","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","toStringTag","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","props","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","loose","properties","className","footnoteReference","footnoteOrder","id","role","revert","subtype","suffix","contents","listItemLoose","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","root","table","rows","align","row","out","cell","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","backReference","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","PropTypes"],"sourceRoot":""}